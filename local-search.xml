<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>阿里云申请免费SSL证书并部署到docker中的halo</title>
    <link href="/2022/0830/%E9%98%BF%E9%87%8C%E4%BA%91%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9ssl%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0docker%E4%B8%AD%E7%9A%84halo/"/>
    <url>/2022/0830/%E9%98%BF%E9%87%8C%E4%BA%91%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9ssl%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0docker%E4%B8%AD%E7%9A%84halo/</url>
    
    <content type="html"><![CDATA[<h1 id="阿里云申请免费SSL证书并部署到docker中的halo"><a href="#阿里云申请免费SSL证书并部署到docker中的halo" class="headerlink" title="阿里云申请免费SSL证书并部署到docker中的halo"></a>阿里云申请免费SSL证书并部署到docker中的halo</h1><h3 id="1、申请阿里云免费ssl"><a href="#1、申请阿里云免费ssl" class="headerlink" title="1、申请阿里云免费ssl"></a>1、申请阿里云免费ssl</h3><p>0元购买地址：<a href="https://common-buy.aliyun.com/?spm=5176.7968328.J_8413632810.2.572c65c30DV07n&commodityCode=cas_dv_public_cn&request=%7B%22ord_time%22:%221:Year%22,%22order_num%22:1,%22product%22:%22cert_product%22,%22domain%22:%22all%22,%22productCode%22:%22symantec-dv-1-starter%22,%22service_num%22:1%7D">云盾证书服务</a></p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204171530321.png" alt="image-20211204171530321"></p><h4 id="管理证书"><a href="#管理证书" class="headerlink" title="管理证书"></a>管理证书</h4><h6 id="SSL证书管理控制台–-gt-SSL证书–-gt-免费证书，创建证书"><a href="#SSL证书管理控制台–-gt-SSL证书–-gt-免费证书，创建证书" class="headerlink" title="SSL证书管理控制台–&gt;SSL证书–&gt;免费证书，创建证书"></a>SSL证书管理控制台–&gt;SSL证书–&gt;免费证书，创建证书</h6><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204171948446.png" alt="image-20211204171948446"></p><h6 id="创建证书之后，点击“证书申请”，填写相关信息提交申请。"><a href="#创建证书之后，点击“证书申请”，填写相关信息提交申请。" class="headerlink" title="创建证书之后，点击“证书申请”，填写相关信息提交申请。"></a>创建证书之后，点击“证书申请”，填写相关信息提交申请。</h6><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204172126555.png" alt="image-20211204172126555"></p><h6 id="填写资料提交申请的过程中，需要进行域名解析，例如："><a href="#填写资料提交申请的过程中，需要进行域名解析，例如：" class="headerlink" title="填写资料提交申请的过程中，需要进行域名解析，例如："></a>填写资料提交申请的过程中，需要进行域名解析，例如：</h6><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204172523532.png" alt="image-20211204172523532"></p><h3 id="2、部署到网站"><a href="#2、部署到网站" class="headerlink" title="2、部署到网站"></a>2、部署到网站</h3><h4 id="2-1、下载证书"><a href="#2-1、下载证书" class="headerlink" title="2.1、下载证书"></a>2.1、下载证书</h4><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204172635685.png" alt="image-20211204172635685"></p><p>下载完后得到两个文件，如下</p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204172702041.png" alt="image-20211204172702041"   align="left"/><h4 id="2-2-、上传证书到云服务器"><a href="#2-2-、上传证书到云服务器" class="headerlink" title="2.2 、上传证书到云服务器"></a>2.2 、上传证书到云服务器</h4><p>创建证书目录，并使用sftp工具将上传到该目录，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /smartwirecom/cert</span><br></pre></td></tr></table></figure><p>配置nginx.conf文件，注意80端口、445端口是否被其他软件或nginx的server占用，可以使用<code>lsof -i:80</code>指令查询占用情况。</p><p>配置文件如下（可以用vi、vim或sftp工具修改）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">监听80端口，并将其重定向到https</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"> </span><br><span class="line">    # 将smartwirecom.net改为您自己的域名</span><br><span class="line">    server_name smartwirecom.net;</span><br><span class="line">    # 上传文件大小的限制</span><br><span class="line">client_max_body_size 1024m;</span><br><span class="line">    # 将所有http请求通过rewrite重定向到https。</span><br><span class="line">    rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置ssl</span></span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line"> </span><br><span class="line">    # 将smartwirecom.net改为您自己的域名</span><br><span class="line">    server_name smartwirecom.net;</span><br><span class="line">    # 上传文件大小的限制</span><br><span class="line">client_max_body_size 1024m;</span><br><span class="line">    # 将证书文件存放路径和证书的密钥文件名替换成自己存放路径与证书的密钥文件名。</span><br><span class="line">    ssl_certificate /smartwirecom/cert/xxxxx_smartwirecom.net.pem;</span><br><span class="line">    ssl_certificate_key /smartwirecom/cert/xxxxx_smartwirecom.net.key;</span><br><span class="line"> </span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header HOST $host;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"> </span><br><span class="line">        # 下面8090是您配置Halo的端口号，笔者这里使用默认端口。</span><br><span class="line">        proxy_pass http://127.0.0.1:8090/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启nignx：<code>systemctl restart nginx</code> 或者<code>nginx -s reload</code></p><p>效果：</p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/image-20211204173848545.png" alt="image-20211204173848545"></p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>单网口OpenWRT设备 + 网管交换机通过VLAN 实现网口拓展、流量隔离</title>
    <link href="/2022/0830/%E5%8D%95%E7%BD%91%E5%8F%A3OpenWRT%E8%AE%BE%E5%A4%87%20+%20%E7%BD%91%E7%AE%A1%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%80%9A%E8%BF%87VLAN%20%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8F%A3%E6%8B%93%E5%B1%95%E3%80%81%E6%B5%81%E9%87%8F%E9%9A%94%E7%A6%BB/"/>
    <url>/2022/0830/%E5%8D%95%E7%BD%91%E5%8F%A3OpenWRT%E8%AE%BE%E5%A4%87%20+%20%E7%BD%91%E7%AE%A1%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%80%9A%E8%BF%87VLAN%20%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8F%A3%E6%8B%93%E5%B1%95%E3%80%81%E6%B5%81%E9%87%8F%E9%9A%94%E7%A6%BB/</url>
    
    <content type="html"><![CDATA[<p>手里有两台设备，<strong>单网口</strong>OpenWRT设备 + 网管型交换机。我们该如何通过VLAN 实现网口拓展、流量隔离，进而将N1盒子如何成为一个主路由？</p><p>要回答这个问题，我们要先了解一下什么是VLAN？为什么需要VLAN？</p><h2 id="VLAN是什么"><a href="#VLAN是什么" class="headerlink" title="VLAN是什么"></a>VLAN是什么</h2><p><strong>虚拟局域网</strong>（<strong>Virtual Local Area Network</strong>或简写<strong>VLAN</strong>,<strong>V-LAN</strong>）是一种建构于局域网交换技术（LAN Switch）的<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E7%B6%B2%E7%B5%A1%E7%AE%A1%E7%90%86">网络管理</a>的技术，网管人员可以借此透过控制<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E4%BA%A4%E6%8F%9B%E5%99%A8">交换机</a>有效分派出入局域网的报文到正确的出入端口，达到对不同实体局域网中的设备进行<a href="https://www.zhihu.com/search?q=%E9%80%BB%E8%BE%91%E5%88%86%E7%BE%A4&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">逻辑分群</a>（Grouping）管理，并降低局域网内大量数据流通时，因无用报文过多导致壅塞的问题，以及提升局域网的信息安全保障。[<a href="https://zhuanlan.zhihu.com/p/107093485#ref_1">1]</a></p><h2 id="为什么需要VLAN"><a href="#为什么需要VLAN" class="headerlink" title="为什么需要VLAN"></a>为什么需要VLAN</h2><p>简单来说当我们使用<strong>单网口</strong>路由器的时候，用一个网口同时处理WAN口与LAN口数据时容易造成报文壅塞，严重时可能造成网络风暴。所以即使我们只有一个网口，我们希望通过某些方式做到逻辑隔离，有效减少无用报文提高数据交换效率。</p><p>而VLAN便是一种实现<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E4%BA%A4%E6%8D%A2%E6%9C%BA">交换机</a><a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E4%B9%99%E5%A4%AA%E7%B6%B2%E8%B7%AF">以太网</a>广播隔离的一种理想解决方案，它可以为网络提供以下作用：</p><blockquote><p>1 广播控制<br>2 带宽利用<br>3 降低延迟<br>4 安全性</p></blockquote><p>所以单网口路由器加上VLAN便可以做为一个主力路由器。</p><blockquote><p>为保证不同交换机能通过VLAN通信，1995年<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/IEEE">IEEE</a>802委员会发表了<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/IEEE_802.1Q">802.1Q</a>VLAN技术的实现标准与帧结构。具体细节可自行Google查询。</p></blockquote><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><blockquote><p>1 支持基于IEEE 802.1Q VLAN管理交换机<br>2 单网口OpenWRT设备（N1盒子）</p></blockquote><p>题图是楼主自家的设备集合，一个N1盒子、一个8口全千兆管理型交换机、一个无线路由器。</p><h2 id="基本原理与拓扑架构"><a href="#基本原理与拓扑架构" class="headerlink" title="基本原理与拓扑架构"></a>基本原理与拓扑架构</h2><p>通过交换机的管理页面，将网络划分为两个VLAN：</p><blockquote><p><strong>VLAN10</strong> 为<a href="https://www.zhihu.com/search?q=LAN%E5%8F%A3%E7%BD%91%E7%BB%9C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">LAN口网络</a>，包含端口2-6<br><strong>VLAN100</strong> 为<a href="https://www.zhihu.com/search?q=WAN%E5%8F%A3%E7%BD%91%E7%BB%9C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">WAN口网络</a>，包含端口1-2</p></blockquote><p>其中端口2为公用端口(tagged port)，同时处理WAN口、LAN口两种流量，其他口为untagged port。</p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-29013c986520bdfe16c1d2d22eeadb88_720w-20211207231200112.jpg" alt="img">VLAN 设置 t&#x3D;tagged u&#x3D;untagged</p><p>然后为每个端口设置PVID，其作用是为所有不带标签的VLAN数据流进来时打上标签。</p><p>如光猫数据从端口1进来此时不带任何标签，经过端口1后便打上了<strong>100</strong>的标签，随后在VLAN100 的 VLAN 里面流通，找到唯一一个出口端口2，带上标签进入OpenWRT路由器。</p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-132a7a0a78fb2a1335a3841b2ef6b5a0_720w-20211207231154504.jpg" alt="img">PVID设置</p><p>结合以下拓扑图，我们不难分析数据走向（相同颜色即为同一VLAN）：</p><blockquote><p>1 无标签数据从光猫进入交换机的网口1，被打上100的标签<br>2 标签100只在属于VLAN100，所以找到唯一的一个可连接的端口2，从端口2进入路由器<br>3 路由器设置了WAN口连接VLAN100，LAN口连VLAN10。CPU处理带标签100的数据后，然后转换成标签10的数据流回端口2<br>4 数据流向端口3-6，从端口出去时将ID去掉，给到无线路由器或者有线PC等设备(各种设备对VLAN无感知)<br>5 从WAN到LAN的数据流结束</p></blockquote><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-2eee16fe23e3da0611a63f394e4b7851_720w-20211207231148429.jpg" alt="img">单网口OpenWRT设备 + 网管交换机的VLAN拓扑</p><h2 id="如何设置"><a href="#如何设置" class="headerlink" title="如何设置"></a>如何设置</h2><p>请参考视频资料，<strong>单网口OpenWRT设备如何设置VLAN？N1盒子如何成为主路由？最终实现网口拓展、流量隔离：</strong><a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1B7411E7sK/">https://www.bilibili.com/video/BV1B7411E7sK/</a>。</p><blockquote><p>1 交换机设置</p></blockquote><p><strong>VLAN划分设置</strong></p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-d0c52fcc3807c30f48e80b8bded3e423_720w-20211207231215687.jpg" alt="img">VLAN划分</p><p><strong>PVID设置</strong></p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-2f617da9a8eae1af35cc405ccc9c064e_720w-20211207231224554.jpg" alt="img">PVID设置</p><blockquote><p>2 OpenWRT接口设置</p></blockquote><p>LAN桥接到 **<a href="https://www.zhihu.com/search?q=eth0.10&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">eth0.10</a>**，即使用VLAN10</p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-bc62c43376e12cb967e6d032bbd00028_720w.jpg" alt="img">LAN口设置</p><p>WAN口设置到 **<a href="https://www.zhihu.com/search?q=eth0.100&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">eth0.100</a>**，即连接到VLAN100。</p><p><img src="https://www.smartwirecom.net/upload/img/upload/2021/12/v2-0aef72ddc25a3dd3627dc60f585171f7_720w.jpg" alt="img">WAN口设置</p><blockquote><p>3 防火墙设置</p></blockquote><p>将之前<a href="https://www.zhihu.com/search?q=%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:107093485%7D">单臂路由</a>时所设置的防火墙规则删掉或者注释掉，换为第二行的规则。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</span></span><br><span class="line">iptables -t nat -I POSTROUTING -o pppoe-WAN -j MASQUERADE</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过VLAN的划分我们的单网口路由即可摇身一变成主路由，同时WAN口&#x2F;LAN口的数据流量不冲突、不会造成潜在的风险。剩余的3-8口都可以作为LAN口，只需要把网络设备接上即可正常上网。</p>]]></content>
    
    
    <categories>
      
      <category>网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github部署个人网站</title>
    <link href="/2022/0829/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    <url>/2022/0829/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="使用hexo-github部署个人网站"><a href="#使用hexo-github部署个人网站" class="headerlink" title="使用hexo+github部署个人网站"></a>使用hexo+github部署个人网站</h1><h3 id="1、M1中安装hexo"><a href="#1、M1中安装hexo" class="headerlink" title="1、M1中安装hexo"></a>1、M1中安装hexo</h3><p>参考：<a href="https://zhuanlan.zhihu.com/p/546198492">https://zhuanlan.zhihu.com/p/546198492</a></p><h4 id="1-1、node-js安装"><a href="#1-1、node-js安装" class="headerlink" title="1.1、node.js安装"></a>1.1、node.js安装</h4><p>因为后面要用到npm install，而npm被集成到了node中，所以首先来安装下node.js。</p><ul><li>下载地址：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn/download/">node.js下载</a></li><li>如下图：M1的选择ARM64那个</li></ul><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/v2-888c31276408642893c35a42836c8a3d_720w.jpg" alt="img"></p><p>安装成功后，可在终端通过-v查看是否安装成功：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node <span class="literal">-v</span> <span class="comment">#查看node版本</span></span><br><span class="line">npm <span class="literal">-v</span> <span class="comment">#查看npm版本</span></span><br></pre></td></tr></table></figure><h3 id="1-2、安装hexo"><a href="#1-2、安装hexo" class="headerlink" title="1.2、安装hexo"></a>1.2、安装hexo</h3><p>安装hexo代码，在终端输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-cli</span> <span class="literal">-g</span></span><br></pre></td></tr></table></figure><p>我在执行这一步的时候报错提示：</p><blockquote><p>Error: EACCES: permission denied, mkdir ‘&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;hexo-cli’</p></blockquote><p>搜了一下，是mac和win都很普遍的权限问题，解决方法如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown <span class="literal">-R</span> <span class="variable">$</span>(whoami) <span class="variable">$</span>(npm config get prefix)/&#123;lib/node_modules,bin,share&#125; <span class="comment">#修改权限范围</span></span><br></pre></td></tr></table></figure><p>然后再次执行<code>npm install hexo-cli -g</code>即可</p><h4 id="1-3-初始化本地博客文件夹"><a href="#1-3-初始化本地博客文件夹" class="headerlink" title="1.3.初始化本地博客文件夹"></a>1.3.初始化本地博客文件夹</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 博客初始化，这里是创建的本地博客文件夹，执行后会自动创建，我这里图简洁，直接用了我网站的地址hihulu.github.io为文件名</span></span><br><span class="line">hexo init /Users/bentou/hexo/hihulu.github.io  </span><br><span class="line"><span class="built_in">cd</span> /Users/bentou/hexo/hihulu.github.io  <span class="comment"># 进入本地的博客文件夹</span></span><br><span class="line">hexo server <span class="comment"># 打开本地服务器预览</span></span><br></pre></td></tr></table></figure><p>以上执行后，你就可以通过访问本地网站“<a href="http://localhost:4000/%E2%80%9D%EF%BC%8C%E7%9C%8B%E5%88%B0%E8%87%AA%E5%B7%B1%E7%BD%91%E7%AB%99%E7%9A%84%E4%B8%80%E4%B8%AA%E5%A4%A7%E6%A6%82%E5%95%A6">http://localhost:4000/”，看到自己网站的一个大概啦</a></p><h3 id="2、安装主题"><a href="#2、安装主题" class="headerlink" title="2、安装主题"></a>2、安装主题</h3><p>使用的主题：<a href="https://github.com/chaooo/hexo-theme-BlueLake">https://github.com/chaooo/hexo-theme-BlueLake</a></p><p>安装说明：<a href="https://chaooo.github.io/2016/12/29/bluelake.html">https://chaooo.github.io/2016/12/29/bluelake.html</a></p><h3 id="3、GitHub上部署"><a href="#3、GitHub上部署" class="headerlink" title="3、GitHub上部署"></a>3、GitHub上部署</h3><h4 id="3-1、创建仓库"><a href="#3-1、创建仓库" class="headerlink" title="3.1、创建仓库"></a>3.1、创建仓库</h4><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829164412189.png" alt="image-20220829164412189"></p><h4 id="3-2、配置git"><a href="#3-2、配置git" class="headerlink" title="3.2、配置git"></a>3.2、配置git</h4><p>在仓库的code页面，复制ssh链接：</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829164456142.png"></p><p>在根_config.yml文件deploy中，填入ssh地址：</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829164702438.png" alt="image-20220829164702438"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:hokbam/hokbam.github.io.git</span> <span class="comment">#这个地址是从github仓库复制过来的ssh</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>当使用hexo d将项目push到GitHub时，可能会出错，因为本机中没有配置ssh信息：</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829170033201.png" alt="image-20220829170033201"></p><p>参考解决方案：<a href="https://blog.csdn.net/weixin_45434534/article/details/104567870">https://blog.csdn.net/weixin_45434534/article/details/104567870</a></p><p>在mac终端进行如下操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;此处为GitHub的邮箱地址&quot;</span></span><br><span class="line">ssh -v git@github.com</span><br><span class="line">ssh-agent -s</span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>将生成的.pub文件中的内容，在GitHub上创建SSH KEY</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829170114947.png" alt="image-20220829170114947"></p><p>GitHub网站路径：右上角头像-&gt;Setting：</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829165540742.png" alt="image-20220829165540742"></p><p>再次执行<code> hexo clean &amp;&amp; hexo deploy</code>，git上传成功：</p><p><img src="https://raw.githubusercontent.com/hokbam/imgesupload/main/img/image-20220829165855141.png" alt="image-20220829165855141"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>markdown测试</title>
    <link href="/2022/0828/MarkDown%E6%B5%8B%E8%AF%95/"/>
    <url>/2022/0828/MarkDown%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h3 id="1、表情符号"><a href="#1、表情符号" class="headerlink" title="1、表情符号"></a>1、表情符号</h3><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">https://www.webfx.com/tools/emoji-cheat-sheet/</a></p><h3 id="100-two-three-four-five-six-seven"><a href="#100-two-three-four-five-six-seven" class="headerlink" title=":100: :two::three::four::five::six::seven:"></a>:100: :two::three::four::five::six::seven:</h3><p>:heavy_check_mark::heavy_multiplication_x:</p><p>:ballot_box_with_check:</p><p>H^2^</p><h3 id="2、脚注"><a href="#2、脚注" class="headerlink" title="2、脚注"></a>2、脚注</h3><p>驿外[^注1]断桥边，寂寞开无主。&#x3D;&#x3D;已是黄昏独&#x3D;&#x3D;自愁，更着风和雨<br>[^注1]:驿（yì）外：指荒僻、冷清之地。驿，驿站。</p><h3 id="3、列表"><a href="#3、列表" class="headerlink" title="3、列表"></a>3、列表</h3><ul><li><p><input disabled="" type="checkbox"> Apple</p></li><li><p><input disabled="" type="checkbox"> Banana</p></li><li><p>1</p></li><li><p>2</p></li><li><p>3</p><ol><li><p>a</p></li><li><p>b</p></li><li><p>c</p></li></ol></li></ul><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudio -i</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">cc</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4、公式"><a href="#4、公式" class="headerlink" title="4、公式"></a>4、公式</h3><p>$$<br>\sqrt{3x-1}+(1+x)^2&#x3D;{x*100}<br>$$</p><p>$$<br>\begin{array}{c}</p><p>\nabla \times \vec{\mathbf{B}} -, \frac1c, \frac{\partial\vec{\mathbf{E}}}{\partial t} &amp;<br>&#x3D; \frac{4\pi}{c}\vec{\mathbf{j}}    \nabla \cdot \vec{\mathbf{E}} &amp; &#x3D; 4 \pi \rho \</p><p>\nabla \times \vec{\mathbf{E}}, +, \frac1c, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; &#x3D; \vec{\mathbf{0}} \</p><p>\nabla \cdot \vec{\mathbf{B}} &amp; &#x3D; 0</p><p>\end{array}<br>$$</p><h3 id="5、图表"><a href="#5、图表" class="headerlink" title="5、图表"></a>5、图表</h3><p><a href="https://mermaid-js.github.io/mermaid/#/flowchart">使用说明</a></p><h4 id="5-1、流程图"><a href="#5-1、流程图" class="headerlink" title="5.1、流程图"></a>5.1、流程图</h4><p>有关更多详细信息，请参见<a href="https://link.juejin.cn/?target=https://mermaid-js.github.io/mermaid/%23/flowchart">这些说明</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">A[开始];</span><br><span class="line">B(工作经验);</span><br><span class="line">C(经济实力);</span><br><span class="line">D(语言能力);</span><br><span class="line">E[成功];</span><br><span class="line">    A--&gt;|111|B;</span><br><span class="line">    A--&gt;|222|C;</span><br><span class="line">    A--&gt;|333|D;</span><br><span class="line">    B--&gt;|1111|E;C--&gt;|2222|E;D--&gt;|3333|E;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[开始] --&gt;B(Round edge)</span><br><span class="line">    B --&gt; C&#123;Decision&#125;</span><br><span class="line">    C --&gt;|One| D[Result one]</span><br><span class="line">    C --&gt;|Two| E[Result two]</span><br><span class="line">    C --&gt;|打回| A</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h4 id="5-2、顺序图"><a href="#5-2、顺序图" class="headerlink" title="5.2、顺序图"></a>5.2、顺序图</h4><p>有关更多详细信息，请参见<a href="https://link.juejin.cn/?target=https://mermaid-js.github.io/mermaid/%23/sequenceDiagram">这些说明</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">    participant Alice</span><br><span class="line">    participant Bob</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    loop Healthcheck</span><br><span class="line">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class="line">    end</span><br><span class="line">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    John-&gt;&gt;Bob: How about you?</span><br><span class="line">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><h4 id="5-3、Gantt-Charts"><a href="#5-3、Gantt-Charts" class="headerlink" title="5.3、Gantt Charts"></a>5.3、Gantt Charts</h4><p>有关更多详细信息，请参见<a href="https://link.juejin.cn/?target=https://mermaid-js.github.io/mermaid/%23gantt">这些说明</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">%% Example with selection of syntaxes</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">        section A section</span><br><span class="line">        Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        Future task               :         des3, after des2, 5d</span><br><span class="line">        Future task2               :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">        section Critical tasks</span><br><span class="line">        Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">        Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">        Create tests for parser             :crit, active, 3d</span><br><span class="line">        Future task in critical line        :crit, 5d</span><br><span class="line">        Create tests for renderer           :2d</span><br><span class="line">        Add to mermaid                      :1d</span><br><span class="line"></span><br><span class="line">        section Documentation</span><br><span class="line">        Describe gantt syntax               :active, a1, after des1, 3d</span><br><span class="line">        Add gantt diagram to demo page      :after a1  , 20h</span><br><span class="line">        Add another diagram to demo page    :doc1, after a1  , 48h</span><br><span class="line"></span><br><span class="line">        section Last section</span><br><span class="line">        Describe gantt syntax               :after doc1, 3d</span><br><span class="line">        Add gantt diagram to demo page      : 20h</span><br><span class="line">        Add another diagram to demo page    : 48h</span><br></pre></td></tr></table></figure><h4 id="5-4、类图"><a href="#5-4、类图" class="headerlink" title="5.4、类图"></a>5.4、类图</h4><p>有关更多详细信息，请参见<a href="https://link.juejin.cn/?target=https://mermaid-js.github.io/mermaid/%23/classDiagram">这些说明</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">      Animal &lt;|-- Duck</span><br><span class="line">      Animal &lt;|-- Fish</span><br><span class="line">      Animal &lt;|-- Zebra</span><br><span class="line">      Animal : +int age</span><br><span class="line">      Animal : +String gender</span><br><span class="line">      Animal: +isMammal()</span><br><span class="line">      Animal: +mate()</span><br><span class="line">      class Duck&#123;</span><br><span class="line">          +String beakColor</span><br><span class="line">          +swim()</span><br><span class="line">          +quack()</span><br><span class="line">      &#125;</span><br><span class="line">      class Fish&#123;</span><br><span class="line">          -int sizeInFeet</span><br><span class="line">          -canEat()</span><br><span class="line">      &#125;</span><br><span class="line">      class Zebra&#123;</span><br><span class="line">          +bool is_wild</span><br><span class="line">          +run()</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h4 id="5-5、状态图"><a href="#5-5、状态图" class="headerlink" title="5.5、状态图"></a>5.5、状态图</h4><p>有关更多详细信息，请参见<a href="https://link.juejin.cn/?target=https://mermaidjs.github.io/%23/stateDiagram">这些说明</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line">    [*] --&gt; Still</span><br><span class="line">    Still --&gt; [*]</span><br><span class="line"></span><br><span class="line">    Still --&gt; Moving</span><br><span class="line">    Moving --&gt; Still</span><br><span class="line">    Moving --&gt; Crash</span><br><span class="line">    Crash --&gt; [*]</span><br></pre></td></tr></table></figure><h4 id="5-6、饼图"><a href="#5-6、饼图" class="headerlink" title="5.6、饼图"></a>5.6、饼图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line">    title Pie Chart</span><br><span class="line">    &quot;Dogs&quot; : 386</span><br><span class="line">    &quot;Cats&quot; : 85</span><br><span class="line">    &quot;Rats&quot; : 150 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">journey</span><br><span class="line">  title My working day</span><br><span class="line">  section Go to work</span><br><span class="line">    Make tea: 5: Me</span><br><span class="line">    Go upstairs: 3: Me</span><br><span class="line">    Do work: 1: Me, Cat</span><br><span class="line">  section Go home</span><br><span class="line">    Go downstairs: 5: Me</span><br><span class="line">    Sit down: 3: Me</span><br></pre></td></tr></table></figure><h3 id="视频2"><a href="#视频2" class="headerlink" title="视频2"></a>视频2</h3><video id="video" controls="" preload="none"  poster="https://wenney.com/upload/2022/05/bbc.png">      <source id="mp4" src="/video/ake.mp4" type="video/mp4"/>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>如何离线升级openssh和openssl</title>
    <link href="/2022/0828/%E7%A6%BB%E7%BA%BF%E5%8D%87%E7%BA%A7opensshopenssl/"/>
    <url>/2022/0828/%E7%A6%BB%E7%BA%BF%E5%8D%87%E7%BA%A7opensshopenssl/</url>
    
    <content type="html"><![CDATA[<h1 id="如何离线升级openssh和openssl"><a href="#如何离线升级openssh和openssl" class="headerlink" title="如何离线升级openssh和openssl"></a>如何离线升级openssh和openssl</h1><h3 id="1、环境检查"><a href="#1、环境检查" class="headerlink" title="1、环境检查"></a>1、环境检查</h3><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235204382.png" alt="image-20211120235204382"></p><p>先确保你的服务器上已经有gcc，gcc-c++。这两个是编译工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep gcc</span><br></pre></td></tr></table></figure><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235224223.png" alt="image-20211120235224223"></p><p>缺少</p><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235252329.png" alt="image-20211120235252329"></p><p>正常应该是这样</p><p><strong>缺少则安装gcc等编译环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#把相关的rpm包全部放到gcc文件夹</span></span><br><span class="line"><span class="comment">#进入gcc文件夹，忽略依赖安装</span></span><br><span class="line">rpm -Uvh --force --nodeps *.rpm</span><br></pre></td></tr></table></figure><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235530863.png" alt="image-20211120235530863"></p><h3 id="2、编译安装openssl"><a href="#2、编译安装openssl" class="headerlink" title="2、编译安装openssl"></a>2、编译安装openssl</h3><p>下载最新版：<a href="https://mirrors.cloud.tencent.com/openssl/source/">https://mirrors.cloud.tencent.com/openssl/source/</a></p><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235556490.png" alt="image-20211120235556490"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份旧版</span></span><br><span class="line"><span class="built_in">mv</span> /usr/lib64/libcrypto.so.1.0.2k /usr/lib64/libcrypto.so.1.0.2k_bak </span><br><span class="line"><span class="built_in">mv</span> /usr/lib64/libssl.so.1.0.2k /usr/lib64/libssl.so.1.0.2k_bak </span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -zxvf openssl-1.0.2k.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-1.0.2k</span><br><span class="line"><span class="comment">#添加openssl配置</span></span><br><span class="line">./config --prefix=/usr/local/openssl</span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make</span><br><span class="line"><span class="comment">#卸载旧版本</span></span><br><span class="line"><span class="keyword">for</span>  i  <span class="keyword">in</span>  $(rpm  -qa |grep  openssl);<span class="keyword">do</span>  rpm  -e  <span class="variable">$i</span> --nodeps  ;<span class="keyword">done</span></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">make install</span><br><span class="line"><span class="comment">#配置相关软链</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/usr/local/openssl/lib&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig</span><br><span class="line"><span class="built_in">cp</span> /usr/local/openssl/lib/libssl.so.1.1 /lib64/libssl.so.1.1</span><br><span class="line"><span class="built_in">cp</span> -f /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</span><br><span class="line"><span class="built_in">cp</span> /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so.10</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libcrypto.so.1.1 /lib64/libcrypto.so.10</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libssl.so.1.1 /usr/lib64/libssl.so.10</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libssl.so.1.1 /usr/lib64/libssl.so</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class="line">openssl version -a</span><br><span class="line"><span class="comment">#修改1.0版软链</span></span><br><span class="line"><span class="built_in">mv</span> /usr/lib64/libcrypto.so.1.0.2k_bak /usr/lib64/libcrypto.so.1.0.2k</span><br><span class="line"><span class="built_in">ln</span> -fs /usr/lib64/libcrypto.so.1.0.2k /usr/lib64/libcrypto.so.10</span><br><span class="line"><span class="built_in">mv</span> /usr/lib64/libssl.so.1.0.2k_bak /usr/lib64/libssl.so.1.0.2k</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/lib64/libssl.so.1.0.2k /usr/lib64/libssl.so.10</span><br></pre></td></tr></table></figure><h3 id="3、编译安装openssh"><a href="#3、编译安装openssh" class="headerlink" title="3、编译安装openssh"></a>3、编译安装openssh</h3><p>下载最新版：<a href="https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/">https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/</a></p><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235616921.png" alt="image-20211120235616921"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入openssh文件夹，并配置</span></span><br><span class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh  --with-ssl-dir=/usr/local/openssl</span><br><span class="line"><span class="comment">#执行make</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载 旧版本的openssh</span></span><br><span class="line"><span class="keyword">for</span>  i  <span class="keyword">in</span>  $(rpm  -qa  |grep  openssh);<span class="keyword">do</span>  rpm  -e  <span class="variable">$i</span>  --nodeps ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装新版本openssh</span></span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看新版的本号</span></span><br><span class="line">ssh -V</span><br><span class="line"></span><br><span class="line">// 在使用ssh登陆试试</span><br><span class="line">sudo <span class="built_in">cp</span> contrib/redhat/sshd.init /etc/init.d/sshd</span><br><span class="line"></span><br><span class="line"><span class="comment">#加入开机启动</span></span><br><span class="line">sudo chkconfig --add sshd</span><br><span class="line">sudo  chkconfig sshd on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置 PermitRootLogin yes</span></span><br><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">// 重启服务</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p><img src="http://www.smartwirecom.net/upload/img/upload/2021/11/image-20211120235714131.png" alt="image-20211120235714131"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/ssh/ssh_host_rsa_key</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/ssh/ssh_host_ed25519_key</span><br></pre></td></tr></table></figure><h3 id="4、升级后的问题"><a href="#4、升级后的问题" class="headerlink" title="4、升级后的问题"></a>4、升级后的问题</h3><h5 id="1）无法登陆ssh"><a href="#1）无法登陆ssh" class="headerlink" title="1）无法登陆ssh"></a>1）无法登陆ssh</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">临时关闭 setenforce 0 </span><br><span class="line"><span class="comment">#设置SELinux 成为permissive模式 setenforce 1 设置SELinux 成为enforcing模式 修改配置文件需要重启服务器 修改/etc/selinux/config 文件，将SELINUX=enforcing改为SELINUX=disabled</span></span><br></pre></td></tr></table></figure><h5 id="2）docker网络异常"><a href="#2）docker网络异常" class="headerlink" title="2）docker网络异常"></a>2）docker网络异常</h5><p>重启docker服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h5 id="3）Sftp账号异常"><a href="#3）Sftp账号异常" class="headerlink" title="3）Sftp账号异常"></a>3）Sftp账号异常</h5><p>因为&#x2F;etc&#x2F;ssh&#x2F;sshd_config文件更新后为全新文件，相关的配置也会被修改。需按照升级前的配置修改。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
